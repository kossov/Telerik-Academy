

game logic

piece {
	color: set depends on player,
	collectable: false
}

// 2 player objects
	//player {
		pieces: [15 piece objects],
		nextToPlay:false
	}

//create game field
	
	//array of 26 field objects - [0] - whites & [25] - blacks - hold pinned pieces (somewhere outside the board)
		//field {
			pieces: [],
			availableForBlack: false,
			availableForWhite: false	
		}

//arrange pieces - set availability of fields

//determine who begins - dice throw bigger wins - player.nextToPlay = true

while (any player pieces.pieces.Length != 0) {

	// add event handler for throwing dices

	// throw dices 
	
	// remove event handler for throwing dices
	
	// draw thrown dices 
	if (dice1 == dice2) {
		draw 4 dices
	} else {
		draw 2 dices
	}
	
	while (has dice to play) {

        if // check if player has pinned piece {
		add flag to all player's pieces - collectable = false;
	}	
	
	if // check if all player's pieces are in his home quarter {
		add flag to all player's pieces - collectable = true;
	}
	
	
	
	??????have to think out a bit on collecting mechanism
	
		if (player.pieces.Length == 0) {
			break;
		}

    // check which pieces can move any of the dices	
		
		if (no possible moves) {
			currentPlayer.nextToPlay = false;
			anotherPlayer.nextToPlay = true;
			break;
		}
		
		// add event handlers on pieces with valid moves
		
		if (piece is pinned || 1 possible piece to move) {
			highlight it automatically - change stroke
		} 
		
	// highlight selected piece and draw spooky piece to where it may go
	
	// move selected piece to that spooky piece	
	
	// if - pin {
		// move pinned piece to its start field ([0] || [25]))
	}	
	
	// snap it to take its place firmly
		if (target field.pieces.Length > 5) {
			stack pieces
		}
		
	// update event handlers for remaining available pieces to move with the second dice/rest of the dices
	// and darken dice which was used
	
	
	}
	
	// remove event handlers on pieces
	
	
	
	// set availability of fields		

}

Congrats!! (player.pieces.Length == 0) WINS!!
